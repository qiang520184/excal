{"version":3,"sources":["index.less","hookRedux.js","child.js","domo1.js","App.js","pages/index.js","TransFrom.js","index.js"],"names":["module","exports","createContext","color","arr","count","Child","CountContext","DemoChild","useContext","useReducer","state","action","counts","dispath","onClick","Example","useState","setCount","useEffect","console","log","Provider","value","App","className","formateEcxal","data","name","newData","forEach","keys","values","length","mouth","substr","year","day","month","Date","getFullYear","allDay","firstDayWeek","getDay","restday","saturday","sunday","i","push","restDay","list","e","obj","workNumber","phone","department","group","saturdayOvertimeList","sundayOvertimeList","overtimeList","Object","entries","key","split","D","includes","indexOf","hour","minute","saturdayOvertimeNum","sundayOvertimeNum","overtimeNum","overtimePay","MyTable","column","title","width","dataIndex","fixed","render","item","inputRef","useRef","columns","setData","json","prosenData","type","current","click","ref","style","display","accept","onInput","persist","target","files","XLSX","file","Promise","resolve","reject","fileReader","FileReader","readAsBinaryString","onload","result","this","workbook","read","Sheets","utils","sheet_to_json","then","res","dataList","map","dataSource","rowKey","scroll","x","y","bordered","FormItem","Item","TextArea","formItemLayout","Option","Group","labelCol","span","wrapperCol","transForm","props","handleSubmit","form","selProduct","handleRealSubmit","getFieldValue","qyUsers","validateFieldsAndScroll","err","phones","loginname","trim","companyId","famPid","vipLevel","remark","idType","formData","FormData","append","fileData","selectProduct","setFieldsValue","handleSelectProduct","handleUpload","refs","ipt","handleChange","setState","uploadList","flag","blur","nextProps","handleResetForm","resetFields","filter","loading","getFieldDecorator","companys","listLoading","layout","label","styles","fileList","index","handleDelete","placeholder","autosize","minRows","save_btn","PureComponent","create","Index","path","component","exact","Pages","TransFrom","Component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.7fd9cf1e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/index.ba9aa20c.less\";","import React, {createContext } from 'react';\n\nconst Context = createContext({\n    color: 'red',\n    arr: [123],\n    count: 1\n});\n\nexport default Context","import React, { useContext } from 'react';\nimport Context from './hookRedux';\n\nfunction Child() {\n    // const [count, setCount] = useState(context);\n    const context = useContext(Context.count);\n    console.log(context)\n    return (\n        <div>\n            <h3>{context}</h3>\n            {/* <button onClick={()=> setCount(count -1)}></button> */}\n        </div>\n    )\n}\nexport default Child;","import React, { useState,useEffect,createContext,useContext,useReducer } from 'react';\nimport Child from './child';\n// import Context from './hookRedux';\nconst CountContext = createContext();\n\nfunction DemoChild() {\n    const context = useContext(CountContext);\n\n    const [counts, dispath] = useReducer((state,action) => {\n        switch (action) {\n            case 'add':\n                    return state + 1;\n                break;\n        \n            default:\n                    return state - 1;\n                break;\n        }\n    }, 10);\n    // const [count, setCount] = useState(context);\n    return (\n        <div>\n            <h3>DemoChild</h3>\n            {/* <h3>{context}</h3> */}\n            <h1>{counts}</h1>\n            <button onClick={()=> dispath('add')}>点击添加</button>\n            <button onClick={()=> dispath()}>点击减少</button>\n\n        </div>\n    )\n}\n\nfunction Example() {\n    const [count, setCount] = useState(0);\n    useEffect(()=> {\n        console.log(`我点击了button${count}次`)\n        // return () => {\n        //     console.log(`example1被卸载了`)\n        // }\n    })\n    return (\n        <div>\n            <p>{count}</p>\n            <button onClick={() => setCount(count+1)}>点击</button>\n            {/* <Context.Provider value={{count}} name>\n                <DemoChild></DemoChild>\n                <Child></Child>\n            </Context.Provider> */}\n            {/* <DemoChild></DemoChild> */}\n            <CountContext.Provider value={count}>\n                <DemoChild></DemoChild>\n            </CountContext.Provider>\n        </div>\n    )\n}\n\nexport default Example\n","import React from 'react';\nimport Demo from './domo1';\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>hooks</h1>\n      </header>\n      <Demo></Demo>\n    </div>\n  );\n}\n\nexport default App;","import React, { useState, useEffect,useRef } from 'react';\nimport { Table, Upload, Button } from 'antd';\nimport json from './201909打卡情况(2).json';\nimport XLSX from 'xlsx';\nimport './index.scss';\nfunction uploadFilesChange(file) {\n\treturn new Promise((resolve, reject) => {\n\t\tconst fileReader = new FileReader();\n\t\tfileReader.readAsBinaryString(file);\n\t\tfileReader.onload = function() {\n\t\t\tlet { result } = this;\n\t\t\tconst workbook = XLSX.read(result, { type: 'binary' });\n\t\t\tlet obj = {};\n\t\t\tObject.entries(workbook.Sheets).forEach(([ keys, value ]) => {\n\t\t\t\tobj[keys] = XLSX.utils.sheet_to_json(value);\n\t\t\t});\n\t\t\tresolve(obj);\n\t\t};\n\t});\n}\n\nfunction allDay(month, year = new Date().getFullYear()) {\n\t//判断闰年\n\tif ((+year % 4 === 0 && +year % 100 !== 0) || +year % 400 === 0) {\n\t\tif (+month === 1) {\n\t\t\treturn 29;\n\t\t}\n\t} else {\n\t\treturn [ 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 ][+month];\n\t}\n}\n\nfunction restDay(day, firstDayWeek) {\n\tlet saturday = [];\n\tlet sunday = [];\n\tfor (let i = 1; i <= day; i++) {\n\t\tif (!firstDayWeek) {\n\t\t\tif (i % 7 === 0) {\n\t\t\t\tsaturday.push(i);\n\t\t\t\tsunday.push(i + 1);\n\t\t\t} else if (i === 1) {\n\t\t\t\tsunday.push(i);\n\t\t\t}\n\t\t} else {\n\t\t\tif (i % 7 === 7 - firstDayWeek) {\n\t\t\t\tsaturday.push(i);\n\t\t\t\tif (i + 1 <= day) {\n\t\t\t\t\tsunday.push(i + 1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn {\n\t\tsaturday,\n\t\tsunday\n\t};\n}\nfunction formateEcxal(data, name) {\n\tvar newData = [];\n\tdata.forEach(([ keys, values ]) => {\n\t\tif (values && values.length) {\n\t\t\tlet mouth = keys.substr(0, 1);\n\t\t\tlet year = name.substr(0, 4);\n\t\t\tlet day = allDay(mouth - 1, year);\n\t\t\tlet firstDayWeek = new Date(`${year}/${mouth}/1`).getDay();\n\t\t\tlet restday = restDay(day, firstDayWeek);\n\t\t\tlet { saturday, sunday } = restday;\n\t\t\tlet list = [];\n\t\t\tvalues.forEach((e) => {\n\t\t\t\tlet obj = {};\n\t\t\t\tobj.name = e['姓名'];\n\t\t\t\tobj.workNumber = e['工号'];\n\t\t\t\tobj.phone = e['手机号'];\n\t\t\t\tobj.department = e['一级部门'];\n\t\t\t\tobj.group = e['二级部门'];\n\t\t\t\tobj.mouth = mouth;\n\t\t\t\tobj.saturdayOvertimeList = [];\n\t\t\t\tobj.sundayOvertimeList = [];\n\t\t\t\tobj.overtimeList = [];\n\t\t\t\tobj.saturday = saturday;\n\t\t\t\tobj.sunday = sunday;\n\t\t\t\te['姓名'] &&\n\t\t\t\t\tObject.entries(e).forEach(([ key, value ]) => {\n\t\t\t\t\t\tif (key && key.split('/').length > 1) {\n\t\t\t\t\t\t\tlet [ M, D ] = key.split('/');\n\n\t\t\t\t\t\t\tif (saturday.includes(+D)) {\n\t\t\t\t\t\t\t\tobj.saturdayOvertimeList.push(D);\n\t\t\t\t\t\t\t} else if (sunday.includes(+D)) {\n\t\t\t\t\t\t\t\tconsole.log(value.indexOf('~') >= 0, D);\n\t\t\t\t\t\t\t\tobj.sundayOvertimeList.push(D);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tlet [ hour, minute ] = value && value.split('~')[1].split(':');\n\t\t\t\t\t\t\t\tif ((+hour === 21 && minute >= 30) || hour > 21) {\n\t\t\t\t\t\t\t\t\tobj.overtimeList.push(D);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\tobj.saturdayOvertimeNum = obj.saturdayOvertimeList.length;\n\t\t\t\tobj.sundayOvertimeNum = obj.sundayOvertimeList.length;\n\t\t\t\tobj.overtimeNum = obj.overtimeList.length;\n\t\t\t\tobj.overtimePay =\n\t\t\t\t\t(obj.saturdayOvertimeList.length + obj.sundayOvertimeList.length) * 50 +\n\t\t\t\t\tobj.overtimeList.length * 20;\n\t\t\t\tlist.push(obj);\n\t\t\t});\n\t\t\tnewData.push({\n\t\t\t\tmouth,\n\t\t\t\tyear,\n\t\t\t\tday,\n\t\t\t\tfirstDayWeek,\n\t\t\t\tlist\n\t\t\t});\n\t\t}\n\t});\n\treturn newData;\n}\n\nfunction MyTable() {\n\tvar column = [\n\t\t{\n\t\t\ttitle: '姓名',\n\t\t\twidth: 150,\n\t\t\tdataIndex: 'name',\n\t\t\tkey: 'name',\n\t\t\tfixed: 'left'\n\t\t},\n\t\t{\n\t\t\ttitle: '工号',\n\t\t\twidth: 150,\n\t\t\tdataIndex: 'workNumber',\n\t\t\tkey: '开发部'\n\t\t},\n\t\t{\n\t\t\ttitle: '手机号',\n\t\t\tdataIndex: 'phone',\n\t\t\tkey: '',\n\t\t\twidth: 200\n\t\t},\n\t\t{\n\t\t\ttitle: '部门',\n\t\t\tdataIndex: 'department',\n\t\t\tkey: '2',\n\t\t\twidth: 150\n\t\t},\n\t\t{\n\t\t\ttitle: '开发组',\n\t\t\tdataIndex: 'group',\n\t\t\tkey: '3',\n\t\t\twidth: 150\n\t\t},\n\t\t{\n\t\t\ttitle: '月份',\n\t\t\tdataIndex: 'mouth',\n\t\t\tkey: '4',\n\t\t\twidth: 150\n\t\t},\n\t\t{\n\t\t\ttitle: '周六加班天数',\n\t\t\tdataIndex: 'saturdayOvertimeNum',\n\t\t\tkey: '6',\n\t\t\twidth: 150\n\t\t\t// render: (item) => item.saturdayOvertimeList.length\n\t\t},\n\t\t{\n\t\t\ttitle: '周日加班天数',\n\t\t\tdataIndex: 'sundayOvertimeNum',\n\t\t\tkey: '7',\n\t\t\twidth: 150\n\t\t},\n\t\t{\n\t\t\ttitle: '工作日加班天数',\n\t\t\tdataIndex: 'overtimeNum',\n\t\t\tkey: '8',\n\t\t\twidth: 150\n\t\t},\n\t\t{\n\t\t\ttitle: 'money',\n\t\t\tkey: 'operation',\n\t\t\tfixed: 'right',\n\t\t\twidth: 100,\n\t\t\trender: (item) => <a>{item.overtimePay}</a>\n\t\t}\n\t];\n\tconst inputRef = useRef(null);\n\tconst [ columns, setColumns ] = useState(column);\n\tconst [ data, setData ] = useState([]);\n\tuseEffect(() => {\n\t\tsetData(Object.values(json[0].prosenData));\n\t}, []);\n\treturn (\n\t\t<div>\n\t\t\t<div className=\"top\">\n\t\t\t\t<Button type=\"dashed\" onClick={() => inputRef.current.click()}>选择考勤表</Button>\n\t\t\t\t<input\n\t\t\t\t\tref={inputRef}\n\t\t\t\t\tstyle={{display: 'none'}}\n\t\t\t\t\ttype=\"file\"\n\t\t\t\t\taccept=\".xls,.xlsx\"\n\t\t\t\t\tonInput={(e) => {\n\t\t\t\t\t\te.persist();\n\t\t\t\t\t\tconsole.log(e, e.target.files[0], e.target.value, XLSX);\n\t\t\t\t\t\tvar files = e.target.files[0];\n\t\t\t\t\t\tvar name = files.name;\n\t\t\t\t\t\tuploadFilesChange(files).then((res) => {\n\t\t\t\t\t\t\tlet dataList = formateEcxal(Object.entries(res), name);\n\t\t\t\t\t\t\tlet data = [];\n\t\t\t\t\t\t\tdataList.map((item) => {\n\t\t\t\t\t\t\t\tdata.push(...item.list);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tsetData(data);\n\t\t\t\t\t\t});\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<Table columns={columns} dataSource={data} rowKey=\"name\" scroll={{ x: 800, y: 1000 }} bordered />\n\t\t</div>\n\t);\n}\nexport default MyTable;\n","import React, { PureComponent } from 'react';\nimport { Form, Input, Button, Select, Radio, Rate, DatePicker } from 'antd';\n// import Ellipsis from '../../components/Ellipsis';\n// import { yuan } from '../../components/Charts';\nimport styles from './index.less';\n// import moment from 'moment/moment';\n\nconst FormItem = Form.Item;\nconst { TextArea } = Input;\nconst { Option } = Select;\nconst RadioGroup = Radio.Group;\n\nconst formItemLayout = {\n  labelCol: {\n    span: 4,\n  },\n  wrapperCol: {\n    span: 16,\n  },\n};\n\n// @Form.create()\nclass transForm extends PureComponent {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      files: '',\n      fileData: null,\n      flag: false,\n      uploadList: []\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { result, handleResetForm, form } = nextProps;\n    if (result) {\n      form.resetFields();\n      handleResetForm();\n    }\n  }\n\n  handleSubmit = () => {\n    const { form, selProduct, handleRealSubmit, qyUsers } = this.props;\n    const { getFieldValue } = form;\n\n    form.validateFieldsAndScroll((err, values) => {\n      if (err) {\n        return;\n      }\n\n      let phones = [];\n      const loginname = getFieldValue('loginname').trim();\n      if (loginname.indexOf(',')) {\n        phones = loginname.split(',');\n      } else {\n        phones = [loginname];\n      }\n\n      const data = {\n        companyId: values.companyId,\n        famPid: selProduct,\n        vipLevel: values.vipLevel || 0,\n        remark: values.remark,\n        // refereeUuid: values.refereeUuid ? _.filter(qyUsers, { openId: values.refereeUuid })[0].uuid : '',\n        // refereeName: values.refereeUuid ? _.filter(qyUsers, { openId: values.refereeUuid })[0].nickName : '',\n        idType: values.idType,\n        // beginDate: values.beginDate ? moment(values.beginDate).format('YYYY-MM-DD') : '',\n      };\n      //console.log(`data is ${JSON.stringify(data)}`);\n      var formData = new FormData()\n    formData.append('phones',phones)\n      handleRealSubmit(formData, data, this.state.fileData);\n    });\n  }\n\n  selectProduct = (value) => {\n    const { form: { setFieldsValue }, handleSelectProduct } = this.props;\n    setFieldsValue({\n      selProduct: value,\n    });\n    handleSelectProduct(value);\n  }\n\n  handleUpload = () => {\n    this.refs.ipt.click()\n  }\n\n  handleChange = (e) => {\n    var formData = new FormData()\n    formData.append('file', e.target.files[0]) \n    this.setState({\n      uploadList:[...this.state.uploadList,{\n        files: e.target.files[0].name,\n        fileData: formData,\n        flag: true\n      }]\n    })\n    this.refs.ipt.value = '';\n    this.refs.ipt.blur();\n\n  }\n\n  handleDelete (e){\n    this.setState({\n      uploadList: this.state.uploadList.filter(item => item.files !== e.files)\n    })\n  }\n\n  render() {\n    const { form: { getFieldDecorator, getFieldValue }, companys, selProduct, list, listLoading,\n      loading, qyUsers } = this.props;\n\n    // let name = getFieldValue('loginname');\n    // name = name && name.trim();\n    // let isImei = false;\n    // if (name) {\n    //   if (name.includes(',')) {\n    //     const firstName = name.split(',')[0]; // 根据输入的第一个账号的长度来自动判断账户类型\n    //     if (firstName.length > 14) {\n    //       isImei = true;\n    //     }\n    //   } else if (name.length > 14) {\n    //     isImei = true;\n    //   }\n    // }\n    \n    return (\n      <Form layout=\"horizontal\">\n        {/* <FormItem label=\"账户类型\" {...formItemLayout}>\n          {getFieldDecorator('idType', {\n            initialValue: 'phone',\n            rules: [\n              {\n                required: true,\n              },\n            ],\n          })(\n            <RadioGroup>\n              <Radio value=\"phone\">手机号</Radio>\n              <Radio value=\"imei\">设备号</Radio>\n            </RadioGroup>\n          )}\n        </FormItem> */}\n        <FormItem label=\"账户\" {...formItemLayout}>\n          {/* {getFieldDecorator('loginname', {\n            rules: [\n              {\n                required: true,\n                message: '请输入账户信息！',\n              },\n              {\n                max: 5000,\n                message: '账户字段长度最多不超过5000！',\n              },\n            ],\n          }) */}\n          (<div>\n            <input type=\"file\" style={{display: \"none\"}} accept=\".xls,.xlsx\" ref=\"ipt\" onInput={this.handleChange}/>\n            <Button onClick={this.handleUpload}>批量上传</Button>\n            <ul className={styles.fileList}>\n            {\n              this.state.uploadList.length ? this.state.uploadList.map((item, index) =>{\n                return  (\n                  <li key={index+ item.files}>\n                    <a>{item.files}</a>\n                    <span onClick={() => this.handleDelete(item)}>x</span>\n                  </li>\n                )\n              }) : null\n            }    \n            </ul>\n      \n            <TextArea placeholder=\"请填写账户, 注意账户类型, 支持多个账户，用英文逗号区分，如：15300081111,15300081112,如果上传数量过多请使用批量上传\" autosize={{ minRows: 4 }} />\n          </div>)}\n        </FormItem>\n        {/* <FormItem label=\"客户\" {...formItemLayout}>\n          {getFieldDecorator('companyId', {\n            rules: [\n              {\n                required: true,\n                message: '请选择客户'\n              },\n            ],\n          })(\n            <Select\n              showSearch\n              filterOption={\n                (input, option) =>\n                option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n              }\n              placeholder=\"请选择客户, 个人可不选\"\n            >\n              {_.map(companys, (item) => {\n                return <Option key={item.id} value={item.id}>{item.name}</Option>;\n              })}\n            </Select>\n          )}\n        </FormItem>\n        <FormItem label=\"开始生效时间\" {...formItemLayout}>\n          {getFieldDecorator('beginDate', {\n            rules: [\n              {\n                required: false,\n              },\n            ],\n          })(\n            <DatePicker\n              format=\"YYYY-MM-DD\"\n              placeholder=\"选择时间\"\n              style={{ width: '50%' }}\n            />\n          )}\n        </FormItem>\n        <FormItem label=\"邀请人\" {...formItemLayout}>\n          {getFieldDecorator('refereeUuid', {\n            rules: [\n              {\n                required: true,\n                message: '请填写邀请人'\n              },\n            ],\n          })(\n            <Select\n              showSearch\n              placeholder=\"请选择邀请人, 支持名字全拼\"\n              filterOption={\n                 (input, option) => {\n                  const { children, value, phone } = option.props;\n                   const re = /^[0-9]+.?[0-9]*$/; // 判断字符串是否为数字     //判断正整数 /^[1-9]+[0-9]*]*$/\n                   if (re.test(input)) {\n                     // eslint-disable-next-line\n                     input += '';\n                     return (`${phone}`.toLowerCase().indexOf(input.toLowerCase()) >= 0);\n                   } else {\n                     return (children.toLowerCase().indexOf(input.toLowerCase()) >= 0 ||\n                             value.toLowerCase().indexOf(input.toLowerCase()) >= 0);\n                   }\n                 }\n              }\n            >\n              {_.map(qyUsers, (item, index) => {\n                return (\n                  <Option\n                    key={`${item.openId}-${index}`}\n                    value={item.openId}\n                    uuid={item.uuid}\n                    phone={item.phone}\n                  >\n                    {item.nickName}\n                  </Option>\n                );\n              })}\n            </Select>\n          )}\n        </FormItem>\n        <FormItem\n          label=\"用户星级\"\n          {...formItemLayout}\n          extra=\"星数越大，用户越重要\"\n        >\n          {getFieldDecorator('vipLevel', {\n              rules: [\n                {\n                  required: false,\n                },\n              ],\n            })(\n              <Rate />\n            )}\n        </FormItem>\n        <FormItem label=\"选择套餐\" {...formItemLayout}>\n        {getFieldDecorator('selProduct', {\n            initialValue: selProduct,\n            rules: [\n              {\n                required: true,\n                message: \"请选择套餐\"\n              },\n            ],\n          })(<Select\n              placeholder=\"请选择套餐\"\n              onChange={this.selectProduct}\n              allowClear\n              showSearch\n              filterOption={(input, option) =>\n                option.props.children[0].toLowerCase().indexOf(input.toLowerCase()) >= 0\n              }\n             >\n              {list && list.length && list.map(item => {\n                return (\n                  <Option key={item.productServiceId} value={item.productServiceId}>\n                    {item.productServiceName}\n                    <span>--¥{item.productPrice}</span>\n                    {item.content && <span>({item.content})</span>}\n                  </Option>\n                )\n              })}\n            </Select>)}\n        </FormItem> */}\n        {/* <FormItem label=\"选择套餐\" {...formItemLayout}>\n          {getFieldDecorator('selProduct', {\n            initialValue: selProduct,\n            rules: [\n              {\n                required: true,\n              },\n            ],\n          })(<List\n            loading={listLoading}\n            rowKey=\"id\"\n            grid={{ gutter: 24, lg: 3, md: 2, sm: 1, xs: 1 }}\n            dataSource={list}\n            renderItem={item => ((\n              <List.Item key={item.id} onClick={this.selectProduct.bind(this, item)}>\n                <Card\n                  hoverable\n                  className={styles.card}\n                  bodyStyle={{ height: '160px', width: '230px' }}\n                >\n                  <Card.Meta\n                    avatar={item.productServiceId === selProduct ? <Icon className={styles.selImg} type=\"check-circle\" /> : <Icon style={{ marginLeft: '20px' }} />}\n                    title={<a href=\"#\">{item.productServiceName}</a>}\n                    description={(\n                      <Ellipsis className={styles.item} lines={3}>\n                        <div>\n                          <div\n                            className={styles.total}\n                            dangerouslySetInnerHTML={{ __html: yuan(item.productPrice) }}\n                          />\n                          <div>{item.content}</div>\n                        </div>\n                      </Ellipsis>\n                    )}\n                  />\n                </Card>\n              </List.Item>\n            ))}\n          />)}\n        </FormItem> */}\n        {/* <FormItem label=\"备注\" {...formItemLayout}>\n          {getFieldDecorator('remark', {\n            initialValue: '',\n            rules: [\n              {\n                required: true,\n                message: \"请填写备注\"\n              },\n            ],\n          })(\n            <TextArea placeholder=\"请填写备注\" autosize={{ minRows: 4 }} />\n          )}\n        </FormItem> */}\n        <div className={styles.save_btn}>\n          <Button type=\"primary\" onClick={this.handleSubmit} loading={loading} className=\"login-form-button\">保存</Button>\n        </div>\n      </Form>\n    );\n  }\n}\n\nexport default  Form.create({ name: 'SearchFromTab' })(transForm);\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Switch, Route, BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport Pages from './pages/index';\nimport TransFrom from './TransFrom';\n\nimport 'antd/dist/antd.css';\n// import * as serviceWorker from './serviceWorker';\nclass Index extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<BrowserRouter>\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route  path=\"/app\" component={App} /> {/* 首页 */}\n\t\t\t\t\t<Route exact path=\"/\" component={Pages} /> {/* 列表 */}\n\t\t\t\t\t<Route exact path=\"/upload\" component={TransFrom} /> {/* 列表 */}\n\n\t\t\t\t</Switch>\n\t\t\t</BrowserRouter>\n\t\t);\n\t}\n}\n\nReactDOM.render(<Index />, document.getElementById('root'));\n\n// ReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}